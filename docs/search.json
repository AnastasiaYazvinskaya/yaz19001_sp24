[
  {
    "objectID": "Templates/DS350_Template.html",
    "href": "Templates/DS350_Template.html",
    "title": "Weekly Notes",
    "section": "",
    "text": "Weekly Notes\n\n\n\n\n Back to top"
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "Physicist, Mathematician, Cambridge professor.\n\nisaac@applesdofall.org | My wikipedia page\n\n\n\nStanding on the shoulders of giants\n\n\nLaws of motion, gravitation, minting coins, disliking Robert Hooke\n\n\n\nCooling, power series, optics, alchemy, planetary motions, apples.\n\n\n\n\n1654-1660 The King’s School, Grantham.\nJune 1661 - now Trinity College, Cambridge\n\nSizar\n\n1667 - death Trinity College, Cambridge\n\nFellow\n\n\n\n\n2012 President, Royal Society, London, UK\nAssociate, French Academy of Science, Paris, France\n\n\n\n\n\n\n1669 Newton Sir I, De analysi per æquationes numero terminorum infinitas.\n1669 Lectiones opticæ.\netc. etc. etc.\n\n\n\n2012 Infinitesimal calculus for solutions to physics problems, SMBC patent 001\n\n\n\n\n1600 Royal Mint, London\n\nWarden\nMinted coins\n\n1600 Lucasian professor of Mathematics, Cambridge University"
  },
  {
    "objectID": "resume.html#currently",
    "href": "resume.html#currently",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "Standing on the shoulders of giants\n\n\nLaws of motion, gravitation, minting coins, disliking Robert Hooke\n\n\n\nCooling, power series, optics, alchemy, planetary motions, apples."
  },
  {
    "objectID": "resume.html#education",
    "href": "resume.html#education",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "1654-1660 The King’s School, Grantham.\nJune 1661 - now Trinity College, Cambridge\n\nSizar\n\n1667 - death Trinity College, Cambridge\n\nFellow"
  },
  {
    "objectID": "resume.html#awards",
    "href": "resume.html#awards",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "2012 President, Royal Society, London, UK\nAssociate, French Academy of Science, Paris, France"
  },
  {
    "objectID": "resume.html#publications",
    "href": "resume.html#publications",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "1669 Newton Sir I, De analysi per æquationes numero terminorum infinitas.\n1669 Lectiones opticæ.\netc. etc. etc.\n\n\n\n2012 Infinitesimal calculus for solutions to physics problems, SMBC patent 001"
  },
  {
    "objectID": "resume.html#occupation",
    "href": "resume.html#occupation",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "1600 Royal Mint, London\n\nWarden\nMinted coins\n\n1600 Lucasian professor of Mathematics, Cambridge University"
  },
  {
    "objectID": "460_projects.html",
    "href": "460_projects.html",
    "title": "DS460 Projects",
    "section": "",
    "text": "Project 0\nProject 1\nProject 2\nProject 3\nProject 4\nProject 5\nProject 6",
    "crumbs": [
      "DS460 Projects",
      "DS450 Projects"
    ]
  },
  {
    "objectID": "460_projects.html#repo-for-all-my-projects",
    "href": "460_projects.html#repo-for-all-my-projects",
    "title": "DS460 Projects",
    "section": "",
    "text": "Project 0\nProject 1\nProject 2\nProject 3\nProject 4\nProject 5\nProject 6",
    "crumbs": [
      "DS460 Projects",
      "DS450 Projects"
    ]
  },
  {
    "objectID": "460_Projects/project5.html",
    "href": "460_Projects/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS460 Projects",
      "Project 5"
    ]
  },
  {
    "objectID": "460_Projects/project3.html",
    "href": "460_Projects/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS460 Projects",
      "Project 3"
    ]
  },
  {
    "objectID": "460_Projects/project1.html",
    "href": "460_Projects/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS460 Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "450_projects.html",
    "href": "450_projects.html",
    "title": "DS450 Projects",
    "section": "",
    "text": "Project 0\nProject 1\nProject 2\nProject 3\nProject 4\nProject 5\nProject 6",
    "crumbs": [
      "DS450 Projects"
    ]
  },
  {
    "objectID": "450_projects.html#repo-for-all-my-projects",
    "href": "450_projects.html#repo-for-all-my-projects",
    "title": "DS450 Projects",
    "section": "",
    "text": "Project 0\nProject 1\nProject 2\nProject 3\nProject 4\nProject 5\nProject 6",
    "crumbs": [
      "DS450 Projects"
    ]
  },
  {
    "objectID": "450_Projects/project5.html",
    "href": "450_Projects/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS450 Projects",
      "Project 5"
    ]
  },
  {
    "objectID": "450_Projects/project3.html",
    "href": "450_Projects/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS450 Projects",
      "Project 3"
    ]
  },
  {
    "objectID": "450_Projects/project1.html",
    "href": "450_Projects/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS450 Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "350_projects.html",
    "href": "350_projects.html",
    "title": "DS350 Projects",
    "section": "",
    "text": "Week 01\nWeek 02\nWeek 03\nWeek 04\nWeek 05\nWeek 06\nWeek 07\nWeek 08\nWeek 09\nWeek 10\nWeek 11\nWeek 12\nWeek 13",
    "crumbs": [
      "DS350 Projects"
    ]
  },
  {
    "objectID": "350_projects.html#repo-for-all-my-projects",
    "href": "350_projects.html#repo-for-all-my-projects",
    "title": "DS350 Projects",
    "section": "",
    "text": "Week 01\nWeek 02\nWeek 03\nWeek 04\nWeek 05\nWeek 06\nWeek 07\nWeek 08\nWeek 09\nWeek 10\nWeek 11\nWeek 12\nWeek 13",
    "crumbs": [
      "DS350 Projects"
    ]
  },
  {
    "objectID": "350_Projects/week_12.html",
    "href": "350_Projects/week_12.html",
    "title": "Weekly Notes",
    "section": "",
    "text": "Weekly Notes\n\n\n\n\n Back to top",
    "crumbs": [
      "DS350 Projects",
      "Week 12"
    ]
  },
  {
    "objectID": "350_Projects/week_10.html",
    "href": "350_Projects/week_10.html",
    "title": "Weekly Notes",
    "section": "",
    "text": "Weekly Notes\n\n\n\n\n Back to top",
    "crumbs": [
      "DS350 Projects",
      "Week 10"
    ]
  },
  {
    "objectID": "350_Projects/week_08.html",
    "href": "350_Projects/week_08.html",
    "title": "Weekly Notes",
    "section": "",
    "text": "Weekly Notes\n\n\n\n\n Back to top",
    "crumbs": [
      "DS350 Projects",
      "Week 8"
    ]
  },
  {
    "objectID": "350_Projects/week_06.html",
    "href": "350_Projects/week_06.html",
    "title": "Weekly Notes",
    "section": "",
    "text": "Weekly Notes\n\n\n\n\n Back to top",
    "crumbs": [
      "DS350 Projects",
      "Week 6"
    ]
  },
  {
    "objectID": "350_Projects/week_04.html",
    "href": "350_Projects/week_04.html",
    "title": "Weekly Notes",
    "section": "",
    "text": "Weekly Notes\n\n\n\n\n Back to top",
    "crumbs": [
      "DS350 Projects",
      "Week 4"
    ]
  },
  {
    "objectID": "350_Projects/week_02.html",
    "href": "350_Projects/week_02.html",
    "title": "Weekly Notes",
    "section": "",
    "text": "Weekly Notes\n\n\n\n\n Back to top",
    "crumbs": [
      "DS350 Projects",
      "Week 2"
    ]
  },
  {
    "objectID": "250_projects.html",
    "href": "250_projects.html",
    "title": "DS250 Projects",
    "section": "",
    "text": "Project 0\nProject 1\nProject 2\nProject 3\nProject 4\nProject 5\nProject 6",
    "crumbs": [
      "DS250 Projects"
    ]
  },
  {
    "objectID": "250_projects.html#repo-for-all-my-projects",
    "href": "250_projects.html#repo-for-all-my-projects",
    "title": "DS250 Projects",
    "section": "",
    "text": "Project 0\nProject 1\nProject 2\nProject 3\nProject 4\nProject 5\nProject 6",
    "crumbs": [
      "DS250 Projects"
    ]
  },
  {
    "objectID": "250_Projects/project5.html",
    "href": "250_Projects/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS250 Projects",
      "Project 5"
    ]
  },
  {
    "objectID": "250_Projects/project3.html",
    "href": "250_Projects/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS250 Projects",
      "Project 3"
    ]
  },
  {
    "objectID": "250_Projects/project1.html#q2-age-estimation-based-on-name",
    "href": "250_Projects/project1.html#q2-age-estimation-based-on-name",
    "title": "Client Report - Project 1: What’s in a Name?",
    "section": "Q2: Age Estimation Based on Name",
    "text": "Q2: Age Estimation Based on Name\nIf you talked to someone named Brittany on the phone, what is your guess of their age? What ages would you not guess?\nFor me, the name Brittany is associated with a young woman of about 20. I definitely would not have guessed that she could be 45 or older if the voice itself did not indicate otherwise. However, according to available data, most people with this name are 33-34 years old today.\n\n\nCode which finds all data for Brittany name\ndata_2 = df.query('name == \"Brittany\"')\n\n\n\n\nCode for creating chart\nchart_2 =px.line(data_2,\n  x=\"year\",\n  y=\"Total\"\n)\nchart_2.update_layout(\n    xaxis_title = \"Year\",\n    yaxis_title = \"People born with the name Brittany\"\n)\nchart_2.show()\n\n\n                                                \nHistory of use of the name Brittany",
    "crumbs": [
      "DS250 Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "250_Projects/project1.html#q3-comparative-analysis-of-christian-names-from-1920-to-2000",
    "href": "250_Projects/project1.html#q3-comparative-analysis-of-christian-names-from-1920-to-2000",
    "title": "Client Report - Project 1: What’s in a Name?",
    "section": "Q3: Comparative Analysis of Christian Names from 1920 to 2000",
    "text": "Q3: Comparative Analysis of Christian Names from 1920 to 2000\nMary, Martha, Peter, and Paul are all Christian names. From 1920 - 2000, compare the name usage of each of the four names.\nPrior to 1970, the most popular name was Mary. It was given to their children 2-4 times more often than the name Paul, which is in second place. An interesting point is that from 1970 to 2000 the use of the names Mary and Paul is almost the same. Martha and Peter are quite rare names for those years from 19021 to 2000. However, it is interesting to note that initially the name Martha was preferable, but after 1950 the situation changed, so that the name Peter became more popular. By 2000, the general usage of all four names was nearly the same.\n\n\nCode which finds all data for Mary, Martha, Peter and Paul names between 1920-2000 years\ndata_3 = df.query('(name == \"Mary\" | name == \"Martha\" | name == \"Peter\" | name == \"Paul\") & year &gt;=1920 & year &lt;=2000')\n\n\n\n\nCode for creating chart\nchart_3 =px.line(data_3,\n  x=\"year\",\n  y=\"Total\",\n  color='name'\n)\nchart_3.update_layout(\n    xaxis_title = \"Year\",\n    yaxis_title = \"People born with the names Mary, Martha, Peter and Paul\"\n)\nchart_3.show()\n\n\n                                                \nHistory of use of the names Mary, Martha, Peter and Paul",
    "crumbs": [
      "DS250 Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "250_Projects/project1.html#q4-impact-of-a-famous-movie-on-name-usage",
    "href": "250_Projects/project1.html#q4-impact-of-a-famous-movie-on-name-usage",
    "title": "Client Report - Project 1: What’s in a Name?",
    "section": "Q4: Impact of a Famous Movie on Name Usage",
    "text": "Q4: Impact of a Famous Movie on Name Usage\nThink of a unique name from a famous movie. Plot the usage of that name and see how changes line up with the movie release. Does it look like the movie had an effect on usage?\nI analyzed data on the name Dominic from the movie “Fast and the Furious”. According to the data, before the release of the first film in 2001 year, the name was already growing in popularity. After the first film, we see an increase in the use of this name. However, after each of the next three releases in 2003, 2006 and 2009 years there was a sharp decline in the use of this name. Although by the fifth film in 2011 year the total number exceeds the usage before the first. After the fifth film, there is again an increase in the use of the name Dominic and after the 6th in 2013 year it declines. Data after 2015 are not available.\n\n\nCode which finds all data for Dominic name\ndata_4 = df.query('name == \"Dominic\"')\n\n\n\n\nCode for creating chart\nchart_4 =px.line(data_4,\n  x=\"year\",\n  y=\"Total\"\n)\nreleased = [2001, 2003, 2006, 2009, 2011, 2013, 2015]\ncolors = ['red', 'green', 'black', 'pink', 'gray', 'purple', 'orange']\ncolorID = 0\nfor line in released:\n    chart_4.add_shape(type=\"line\",\n                  x0=line, y0=0,  # start of the line\n                  x1=line, y1=6500,  # end of the line\n                  line=dict(color=colors[colorID], width=2, dash='dash'))\n    chart_4.add_annotation(\n        x=line-1, y=1200,\n        text=str(line),\n        yshift=10,  # Adjust vertical position of the annotation\n        font=dict(color=colors[colorID]),  # Set font color to match the line\n        showarrow=False,\n        textangle=270,\n    )\n    colorID += 1\nchart_4.update_layout(\n    xaxis_title = \"Year\",\n    yaxis_title = \"People born with the name Dominic\"\n)\nchart_4.show()\n\n\n                                                \nHistory of use of the name Dominic",
    "crumbs": [
      "DS250 Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "250_Projects/project1.html#q5-reproduction-of-elliot-name-chart",
    "href": "250_Projects/project1.html#q5-reproduction-of-elliot-name-chart",
    "title": "Client Report - Project 1: What’s in a Name?",
    "section": "Q5: Reproduction of “Elliot” Name Chart",
    "text": "Q5: Reproduction of “Elliot” Name Chart\nReproduce the chart Elliot using the data from the names_year.csv file.\nAccording to the data, we can see the history of the usage of Elliot name and E.T Releases: first in the middle of 1982 year, second in the 1985 year and third in 2002 year.\n\n\nCode which finds all data for Elliot name after 1950 year\ndata_5 = df.query('name == \"Elliot\" & year &gt;=1950')\n\n\n\n\nCode for creating chart\nchart_5 =px.line(data_5,\n  x=\"year\",\n  y=\"Total\",\n  color='name'\n)\nchart_5.add_vline(\n    x=1982.5, \n    line_width=2, \n    line_dash=\"dash\", \n    line_color=\"red\", \n    annotation_text='E.T Released',\n    annotation_position=\"left top\"\n)\nchart_5.add_vline(\n    x=1985, \n    line_width=2, \n    line_dash=\"dash\", \n    line_color=\"red\", \n    annotation_text='Second Release'\n)\nchart_5.add_vline(\n    x=2002, \n    line_width=2, \n    line_dash=\"dash\", \n    line_color=\"red\", \n    annotation_text='Third Release'\n)\nchart_5.update_layout(\n    xaxis = dict(range=[1950, 2025]),\n    xaxis_title = \"year\",\n    yaxis = dict(range=[-50, 1300]),\n    yaxis_title = \"Total\",\n    title = \"Elliot... What?\"\n)\nchart_5.show()\n\n\n                                                \nHistory of use of the name Eliot from the 1950 year with tree releases",
    "crumbs": [
      "DS250 Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "250_Projects/project0.html",
    "href": "250_Projects/project0.html",
    "title": "Client Report - Introduction",
    "section": "",
    "text": "Introduction\n\n\n\nElevator pitch\nTODO:paste your elevator pitch here REMOVE ME: ELEVATOR PITCH IS A SHORT (3-5 SENTENCES) PARAGRAPH THAT DESCRIBES KEY INSIGHTS TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS.\n\n\nRead and format project data\n# Include and execute your code here\ndf = pd.read_csv(\"https://github.com/byuidatascience/data4names/raw/master/data-raw/names_year/names_year.csv\")\n\n\n\n\nQUESTION|TASK 1\nTODO:COPY PASTE QUESTION|TASK 1 FROM THE PROJECT HERE\nTODO: type your results and analysis here\nTODO and REMOVE: remove any cells not relavent to this question\n\n\nRead and format data\n# Include and execute your code here\n# Include import statements here \n# Include reading data statements here\nx=df.query('name == \"Anastasia\"')\n\n\n\n\nplot example\n# Include and execute your code here\nchart = px.scatter(df.head(200),\n    x=\"name\", \n    y=\"AK\"\n)\nchart\n\n\n                                                \nMy useless chart\n\n\nREMOVE ME: the output of any code cell will appear below the cell, including tables and charts\n\n\ntable example\n# Include and execute your code here\nmydat = df.head(1000)\\\n    .groupby('year')\\\n    .sum()\\\n    .reset_index()\\\n    .tail(10)\\\n    .filter([\"year\", \"AK\",\"AR\"])\n\ndisplay(mydat)\n\n\n\n\n\n\n\nNot much of a table {#cell-Q1-table}\n\n\n\nyear\nAK\nAR\n\n\n\n\n96\n2006\n21.0\n183.0\n\n\n97\n2007\n28.0\n153.0\n\n\n98\n2008\n36.0\n212.0\n\n\n99\n2009\n34.0\n179.0\n\n\n100\n2010\n22.0\n196.0\n\n\n101\n2011\n41.0\n148.0\n\n\n102\n2012\n28.0\n140.0\n\n\n103\n2013\n26.0\n134.0\n\n\n104\n2014\n20.0\n114.0\n\n\n105\n2015\n28.0\n121.0\n\n\n\n\n\n\n\n\nREMOVE ME: the output of any code cell will appear below the cell, including tables and charts\n\n\nQUESTION|TASK 2\nTODO: COPY PASTE QUESTION|TASK 2 FROM THE PROJECT HERE\nTODO: type your results and analysis here\nTODO and REMOVE: remove any cells not relavent to this question\n\n\nRead and format data\n# Include and execute your code here\n\n\n\n\nplot example\n# Include and execute your code here\nchart = px.bar(df.head(200),\n    x=\"name\", \n    y=\"AK\"\n)\nchart.show()\n\n\n                                                \nMy useless chart\n\n\nREMOVE ME: the output of any code cell will appear below the cell, including tables and charts\n\n\ntable example\n# Include and execute your code here\nmydat = df.head(1000)\\\n    .groupby('year')\\\n    .sum()\\\n    .reset_index()\\\n    .tail(10)\\\n    .filter([\"year\", \"AK\",\"AR\"])\n\ndisplay(mydat)\n\n\n\n\n\n\n\nNot much of a table {#cell-Q2-table}\n\n\n\nyear\nAK\nAR\n\n\n\n\n96\n2006\n21.0\n183.0\n\n\n97\n2007\n28.0\n153.0\n\n\n98\n2008\n36.0\n212.0\n\n\n99\n2009\n34.0\n179.0\n\n\n100\n2010\n22.0\n196.0\n\n\n101\n2011\n41.0\n148.0\n\n\n102\n2012\n28.0\n140.0\n\n\n103\n2013\n26.0\n134.0\n\n\n104\n2014\n20.0\n114.0\n\n\n105\n2015\n28.0\n121.0\n\n\n\n\n\n\n\n\nREMOVE ME: the output of any code cell will appear below the cell, including tables and charts\n\n\nQUESTION|TASK 3\nTODO: COPY PASTE QUESTION|TASK 3 FROM THE PROJECT HERE\nTODO: type your results and analysis here\nTODO and REMOVE: remove any cells not relavent to this question\n\n\nRead and format data\n# Include and execute your code here\n\n\n\n\nplot example\n# Include and execute your code here\nchart = px.bar(df.head(200),\n    x=\"name\", \n    y=\"AK\"\n)\nchart.show()\n\n\n                                                \nMy useless chart\n\n\nREMOVE ME: the output of any code cell will appear below the cell, including tables and charts\n\n\ntable example\n# Include and execute your code here\nmydat = df.head(1000)\\\n    .groupby('year')\\\n    .sum()\\\n    .reset_index()\\\n    .tail(10)\\\n    .filter([\"year\", \"AK\",\"AR\"])\n\ndisplay(mydat)\n\n\n\n\n\n\n\nNot much of a table {#cell-Q3-table}\n\n\n\nyear\nAK\nAR\n\n\n\n\n96\n2006\n21.0\n183.0\n\n\n97\n2007\n28.0\n153.0\n\n\n98\n2008\n36.0\n212.0\n\n\n99\n2009\n34.0\n179.0\n\n\n100\n2010\n22.0\n196.0\n\n\n101\n2011\n41.0\n148.0\n\n\n102\n2012\n28.0\n140.0\n\n\n103\n2013\n26.0\n134.0\n\n\n104\n2014\n20.0\n114.0\n\n\n105\n2015\n28.0\n121.0\n\n\n\n\n\n\n\n\nREMOVE ME: the output of any code cell will appear below the cell, including tables and charts\n\n\n\n\n Back to top",
    "crumbs": [
      "DS250 Projects",
      "Project 0"
    ]
  },
  {
    "objectID": "250_Projects/project2.html#q2-analysis-of-airport-delays",
    "href": "250_Projects/project2.html#q2-analysis-of-airport-delays",
    "title": "Client Report - Late Flights & Missing Data (JSON)",
    "section": "Q2: Analysis of Airport Delays",
    "text": "Q2: Analysis of Airport Delays\nWhich airport has the worst delays? Describe the metric you chose, and why you chose it to determine the “worst” airport. Your answer should include a summary table that lists (for each airport) the total number of flights, total number of delayed flights, proportion of delayed flights, and average delay time in hours.\nIn my understanding, the worst airport is the one that has the most delayed flights, since this does not give confidence whether my flight will be canceled or not, as well as the longest delay time, because this means that I have to plan too much time, taking into account possible postponement of the flight for subsequent business. According to this definition, a table was compiled in which we can see that the SFO airport is the worst in relation to it, since it most often has delays and in fact has the longest average delay time.\n\n\nCalculate average delay time and proportion of delayed flights and group data by airport\n# Add the 'average delay time in hours' column\ndata2 = df.assign(average_delay_time_in_hour = df.minutes_delayed_total/df.num_of_delays_total/60)\n# Group rows by the 'airport code'\ndata2 = data2.groupby(\"airport_code\").agg(\n    total_num_of_flights = ('num_of_flights_total', 'sum'),\n    total_num_of_delays = ('num_of_delays_total', 'sum'),\n    average_delay_time_in_hour = ('average_delay_time_in_hour', 'mean')\n)\n# Add the 'proportion of delayed flights' column\ndata2 = data2.assign(proportion_of_delayed_flights = lambda x: x.total_num_of_delays/x.total_num_of_flights)\n\n\n\n\nSort data to find the worst airport\n# Sort table by the 'average delay time in hours' and 'proportion of delayed flights'\ntable2 = data2.sort_values(['proportion_of_delayed_flights', 'average_delay_time_in_hour'], ascending=False)\n# Print out table\ndisplay(table2)\n\n\n\n\n\n\n\nRating of airports {#cell-Q2-table}\n\n\n\ntotal_num_of_flights\ntotal_num_of_delays\naverage_delay_time_in_hour\nproportion_of_delayed_flights\n\n\nairport_code\n\n\n\n\n\n\n\n\nSFO\n1630945\n425604\n1.017653\n0.260955\n\n\nORD\n3597588\n830825\n1.105717\n0.230939\n\n\nATL\n4430047\n902443\n0.989502\n0.203710\n\n\nIAD\n851571\n168467\n1.003245\n0.197831\n\n\nSAN\n917862\n175132\n0.784028\n0.190804\n\n\nDEN\n2513974\n468519\n0.882581\n0.186366\n\n\nSLC\n1403384\n205160\n0.823587\n0.146189",
    "crumbs": [
      "DS250 Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "250_Projects/project2.html#q3-optimal-month-for-minimizing-flight-delays",
    "href": "250_Projects/project2.html#q3-optimal-month-for-minimizing-flight-delays",
    "title": "Client Report - Late Flights & Missing Data (JSON)",
    "section": "Q3: Optimal Month for Minimizing Flight Delays",
    "text": "Q3: Optimal Month for Minimizing Flight Delays\nWhat is the best month to fly if you want to avoid delays of any length? Describe the metric you chose and why you chose it to calculate your answer. Include one chart to help support your answer, with the x-axis ordered by month. (To answer this question, you will need to remove any rows that are missing the Month variable.)\nIn this graph we can see the percentage of delayed flights for each month. So we see that December has the most flight delays, so there’s a good chance our flight will be delayed this month too. While in September, according to statistics, the least flight delays occur. Therefore, if you are planning a trip by plane, then the best month for your plans to best match your expectations is September.\n\n\nClear month data\n# clear data\nclearData = df\nclearData.replace('', np.nan, inplace=True)\nclearData.replace('n/a', np.nan, inplace=True)\nclearData.replace('Febuary', 'February', inplace=True)\n# Delete all rows with no named month\ndata3 = clearData.query(\"@pd.notnull(month)\")\n# Group rows by the 'month'\ndata3 = data3.groupby('month').agg(\n    total_num_of_flights = ('num_of_flights_total', 'sum'),\n    total_num_of_delays = ('num_of_delays_total', 'sum')\n).reset_index()\n# Add the 'proportion of delayed flights in %' column\ndata3 = data3.assign(proportion_of_delayed_flights = lambda x: round(x.total_num_of_delays/x.total_num_of_flights, 2)*100)\n# Sort table by the 'months'\nmonth_dict = {'January':1,'February':2,'March':3, 'April':4, 'May':5, 'June':6, 'July':7, 'August':8, 'September':9, 'October':10, 'November':11, 'December':12}\ndata3 = data3.sort_values(['month'], key = lambda x : x.apply (lambda x : month_dict[x]), ascending=True).reset_index(drop=True)\n\n\n\n\nCreate chart which show rate of delayed flights for each month\nmin_index = min(range(len(data3['proportion_of_delayed_flights'])), key=lambda i: data3['proportion_of_delayed_flights'][i])\n# Define colors list with default color for all bars\ncolors = ['#636efa'] * len(data3['proportion_of_delayed_flights'])\n# Recolor the bar with minimum value\ncolors[min_index] = 'green'\nchart3 = px.bar(data3,\n    x=\"month\", \n    y=\"proportion_of_delayed_flights\"\n)\nchart3.data[0].marker.color = colors\nchart3.update_layout(\n    xaxis_title = \"Month\",\n    yaxis_title = \"Rate of delayed flights in %\"\n)\nbase_color = chart3.data[0].marker.color[0]\n\nprint(\"Base color for bars:\", base_color)\n# Rotate text under the bar like the Yaxis title\nchart3.update_xaxes(tickangle=270)\nchart3.show()\n\n\nBase color for bars: #636efa\n\n\n                                                \nRate of delayed flights for each month",
    "crumbs": [
      "DS250 Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "250_Projects/project2.html#q4-calculation-of-total-weather-related-flight-delays",
    "href": "250_Projects/project2.html#q4-calculation-of-total-weather-related-flight-delays",
    "title": "Client Report - Late Flights & Missing Data (JSON)",
    "section": "Q4: Calculation of Total Weather-Related Flight Delays",
    "text": "Q4: Calculation of Total Weather-Related Flight Delays\nYour job is to create a new column that calculates the total number of flights delayed by weather (both severe and mild). According to the BTS website, the “Weather” category only accounts for severe weather delays. Mild weather delays are not counted in the “Weather” category, but are actually included in both the “NAS” and “Late-Arriving Aircraft” categories. You will need to replace all the missing values in the Late Aircraft variable with the mean. Show your work by printing the first 5 rows of data in a table. Use these three rules for your calculations:\n\n100% of delayed flights in the Weather category are due to weather\n30% of all delayed flights in the Late-Arriving category are due to weather\nFrom April to August, 40% of delayed flights in the NAS category are due to weather. The rest of the months, the proportion rises to 65%\n\nWhile studying the data necessary for the calculations, it was discovered that flights delayed due to a late plane had incorrect data in the form of -999, which I corrected to the average value for this column. The remaining columns required for calculations had data correct for calculations.\n\n\nClear data and calculate total number of delays by weather\n# Use mean value for missing data\nmean_late_aircraft = clearData.num_of_delays_late_aircraft.mean()\nclearData.replace(-999, mean_late_aircraft, inplace=True)\n# calculate delays by weather\ndata4 = clearData.assign(delays_by_weather_months = lambda x: 0.4*x.num_of_delays_nas if str(x.month) in ['April', 'May', 'June', 'July', 'August'] else 0.65*x.num_of_delays_nas)\ndata4 = data4.assign(delays_by_weather = lambda x: x.num_of_delays_weather + 0.3*x.num_of_delays_late_aircraft + x.delays_by_weather_months)\n\n\n\n\nTable with total number of delays by weather\ntable4 = data4.head(5)\n\ndisplay(table4)\n\n\n\n\n\n\n\nTop 5 rows with total number of delays by weather {#cell-Q4-table}\n\n\n\nairport_code\nairport_name\nmonth\nyear\nnum_of_flights_total\nnum_of_delays_carrier\nnum_of_delays_late_aircraft\nnum_of_delays_nas\nnum_of_delays_security\nnum_of_delays_weather\nnum_of_delays_total\nminutes_delayed_carrier\nminutes_delayed_late_aircraft\nminutes_delayed_nas\nminutes_delayed_security\nminutes_delayed_weather\nminutes_delayed_total\ndelays_by_weather_months\ndelays_by_weather\n\n\n\n\n0\nATL\nAtlanta, GA: Hartsfield-Jackson Atlanta Intern...\nJanuary\n2005.0\n35048\n1500+\n1017.844156\n4598\n10\n448\n8355\n116423.0\n104415\n207467.0\n297\n36931\n465533\n2988.70\n3742.053247\n\n\n1\nDEN\nDenver, CO: Denver International\nJanuary\n2005.0\n12687\n1041\n928.000000\n935\n11\n233\n3153\n53537.0\n70301\n36817.0\n363\n21779\n182797\n607.75\n1119.150000\n\n\n2\nIAD\nNaN\nJanuary\n2005.0\n12381\n414\n1058.000000\n895\n4\n61\n2430\nNaN\n70919\n35660.0\n208\n4497\n134881\n581.75\n960.150000\n\n\n3\nORD\nChicago, IL: Chicago O'Hare International\nJanuary\n2005.0\n28194\n1197\n2255.000000\n5415\n5\n306\n9178\n88691.0\n160811\n364382.0\n151\n24859\n638894\n3519.75\n4502.250000\n\n\n4\nSAN\nSan Diego, CA: San Diego International\nJanuary\n2005.0\n7283\n572\n680.000000\n638\n7\n56\n1952\n27436.0\n38445\n21127.0\n218\n4326\n91552\n414.70\n674.700000",
    "crumbs": [
      "DS250 Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "250_Projects/project2.html#q5-analysis-of-weather-related-flight-delays-by-airport",
    "href": "250_Projects/project2.html#q5-analysis-of-weather-related-flight-delays-by-airport",
    "title": "Client Report - Late Flights & Missing Data (JSON)",
    "section": "Q5: Analysis of Weather-Related Flight Delays by Airport",
    "text": "Q5: Analysis of Weather-Related Flight Delays by Airport\nUsing the new weather variable calculated above, create a barplot showing the proportion of all flights that are delayed by weather at each airport. Describe what you learn from this graph.\nAccording to statistics and taking into account all data errors on the histogram, we can see the following: Siberian Federal District, ORD, ATL have approximately the same high percentage of flights delayed due to weather - 40+%. This means that when choosing these airports, you should pay attention to the expected weather when flying in that region. SAN Airport has the lowest percentage of flights delayed due to weather - 30%.\n\n\nPrepare data for proportion of delays by weather for each airport\ndata5 = data4.groupby(\"airport_code\").agg(\n    total_num_of_delays = ('num_of_delays_total', 'sum'),\n    num_of_delays_weather = ('num_of_delays_weather', 'sum'),\n    numu_of_delays_late_aircraft = ('num_of_delays_late_aircraft', 'sum'),\n    num_of_delays_nas = ('num_of_delays_nas', 'sum'),\n    total_num_of_delays_by_weather = ('delays_by_weather', 'sum')\n).reset_index()\n# Add the 'proportion of delayed flights by weather' column\ndata5 = data5.assign(proportion_of_delayed_flights_by_weather = lambda x: round(x.total_num_of_delays_by_weather/x.total_num_of_delays, 2)*100)\n\n\n\n\nChart for showing the rate of delayed flights by weather for each airport\nchart5 = px.bar(data5.head(200),\n    x=\"airport_code\", \n    y=\"proportion_of_delayed_flights_by_weather\"\n)\n\nchart5.update_layout(\n    xaxis_title = \"Airport code\",\n    yaxis_title = \"Rate of delayed flights by weather in %\"\n)\nchart5.show()\n\n\n                                                \nRate of delayed flights by weather fro each airport",
    "crumbs": [
      "DS250 Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "250_Projects/project2.html#q6-comparative-analysis-of-flight-delay-types",
    "href": "250_Projects/project2.html#q6-comparative-analysis-of-flight-delay-types",
    "title": "Client Report - Late Flights & Missing Data (JSON)",
    "section": "Q6: Comparative Analysis of Flight Delay Types",
    "text": "Q6: Comparative Analysis of Flight Delay Types\nWhich delay is the worst delay? Create a similar analysis as above for Weahter Delay with: Carrier Delay and Security Delay. Compare the proportion of delay for each of the three categories in a Chart and a Table. Describe your results.\nAnswer\n\n\nClear data before grouping\n# Clear num_of_delays_carrier\ndata4['Numeric_Column'] = pd.to_numeric(data4['num_of_delays_carrier'], errors='coerce')\nmean_value = data4['Numeric_Column'].mean()\ndata4['num_of_delays_carrier'] = data4['Numeric_Column'].fillna(mean_value)\n# Clear num_of_delays_security\ndata4['Numeric_Column'] = pd.to_numeric(data4['num_of_delays_security'], errors='coerce')\nmean_value = data4['Numeric_Column'].mean()\ndata4['num_of_delays_security'] = data4['Numeric_Column'].fillna(mean_value)\ndata4.drop(columns=['Numeric_Column'], inplace=True)\n\n\n\n\nPrepare data for chart\ndata6 = data4.groupby(\"airport_code\").agg(\n    total_num_of_delays = ('num_of_delays_total', 'sum'),\n    num_of_delays_weather = ('num_of_delays_weather', 'sum'),\n    numu_of_delays_late_aircraft = ('num_of_delays_late_aircraft', 'sum'),\n    num_of_delays_nas = ('num_of_delays_nas', 'sum'),\n    total_num_of_delays_by_weather = ('delays_by_weather', 'sum'),\n    num_of_delays_carrier = ('num_of_delays_carrier', 'sum'),\n    num_of_delays_security = ('num_of_delays_security', 'sum')\n).reset_index()\n# Add the 'proportion of delayed flights by weather' column\ndata6 = data6.assign(rate_of_delayed_flights_by_weather = lambda x: round(x.total_num_of_delays_by_weather/x.total_num_of_delays, 2)*100)\ndata6 = data6.assign(rate_of_delayed_flights_by_carrier = lambda x: round(x.num_of_delays_carrier/x.total_num_of_delays, 2)*100)\ndata6 = data6.assign(rate_of_delayed_flights_by_security = lambda x: round(x.num_of_delays_security/x.total_num_of_delays, 2)*100)\ndata6\n\n\n\n\n\n\n\n\n\n\nairport_code\ntotal_num_of_delays\nnum_of_delays_weather\nnumu_of_delays_late_aircraft\nnum_of_delays_nas\ntotal_num_of_delays_by_weather\nnum_of_delays_carrier\nnum_of_delays_security\nrate_of_delayed_flights_by_weather\nrate_of_delayed_flights_by_carrier\nrate_of_delayed_flights_by_security\n\n\n\n\n0\nATL\n902443\n32375\n232316.389610\n391849\n356771.766883\n131831.042303\n833\n40.0\n15.0\n0.0\n\n\n1\nDEN\n468519\n13836\n180001.000000\n150496\n165658.700000\n117032.769683\n985\n35.0\n25.0\n0.0\n\n\n2\nIAD\n168467\n4794\n64837.000000\n50812\n57272.900000\n47761.000000\n272\n34.0\n28.0\n0.0\n\n\n3\nORD\n830825\n20765\n269785.376623\n379233\n348202.062987\n134360.424207\n862\n42.0\n16.0\n0.0\n\n\n4\nSAN\n175132\n4320\n70601.000000\n42590\n53183.800000\n57130.000000\n490\n30.0\n33.0\n0.0\n\n\n5\nSFO\n425604\n10377\n124170.000000\n203948\n180194.200000\n86417.000000\n697\n42.0\n20.0\n0.0\n\n\n6\nSLC\n205160\n6831\n79451.000000\n52928\n65069.500000\n64224.294947\n867\n32.0\n31.0\n0.0\n\n\n\n\n\n\n\n\n\n\nCode for creating chart\ndf_last_three = data6[['airport_code'] + list(data6.columns[-3:])]\ndf_long = df_last_three.melt(id_vars='airport_code', var_name='Proportion', value_name='Value')\nfig = px.bar(df_long, x='airport_code', y='Value', color='Proportion', barmode='group',\nlabels={''})\nfig\n\n\n                                                \nHistory of use of the name Eliot from the 1950 year with tree releases",
    "crumbs": [
      "DS250 Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "250_Projects/project4.html",
    "href": "250_Projects/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS250 Projects",
      "Project 4"
    ]
  },
  {
    "objectID": "250_Projects/project6.html",
    "href": "250_Projects/project6.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS250 Projects",
      "Project 6"
    ]
  },
  {
    "objectID": "350_Projects/week_01.html",
    "href": "350_Projects/week_01.html",
    "title": "Weekly Notes",
    "section": "",
    "text": "Weekly Notes\n\n\n\n\n Back to top",
    "crumbs": [
      "DS350 Projects",
      "Week 1"
    ]
  },
  {
    "objectID": "350_Projects/week_03.html",
    "href": "350_Projects/week_03.html",
    "title": "Weekly Notes",
    "section": "",
    "text": "Weekly Notes\n\n\n\n\n Back to top",
    "crumbs": [
      "DS350 Projects",
      "Week 3"
    ]
  },
  {
    "objectID": "350_Projects/week_05.html",
    "href": "350_Projects/week_05.html",
    "title": "Weekly Notes",
    "section": "",
    "text": "Weekly Notes\n\n\n\n\n Back to top",
    "crumbs": [
      "DS350 Projects",
      "Week 5"
    ]
  },
  {
    "objectID": "350_Projects/week_07.html",
    "href": "350_Projects/week_07.html",
    "title": "Weekly Notes",
    "section": "",
    "text": "Weekly Notes\n\n\n\n\n Back to top",
    "crumbs": [
      "DS350 Projects",
      "Week 7"
    ]
  },
  {
    "objectID": "350_Projects/week_09.html",
    "href": "350_Projects/week_09.html",
    "title": "Weekly Notes",
    "section": "",
    "text": "Weekly Notes\n\n\n\n\n Back to top",
    "crumbs": [
      "DS350 Projects",
      "Week 9"
    ]
  },
  {
    "objectID": "350_Projects/week_11.html",
    "href": "350_Projects/week_11.html",
    "title": "Weekly Notes",
    "section": "",
    "text": "Weekly Notes\n\n\n\n\n Back to top",
    "crumbs": [
      "DS350 Projects",
      "Week 11"
    ]
  },
  {
    "objectID": "350_Projects/week_13.html",
    "href": "350_Projects/week_13.html",
    "title": "Weekly Notes",
    "section": "",
    "text": "Weekly Notes\n\n\n\n\n Back to top",
    "crumbs": [
      "DS350 Projects",
      "Week 13"
    ]
  },
  {
    "objectID": "450_Projects/project0.html",
    "href": "450_Projects/project0.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS450 Projects",
      "Project 0"
    ]
  },
  {
    "objectID": "450_Projects/project2.html",
    "href": "450_Projects/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS450 Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "450_Projects/project4.html",
    "href": "450_Projects/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS450 Projects",
      "Project 4"
    ]
  },
  {
    "objectID": "450_Projects/project6.html",
    "href": "450_Projects/project6.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS450 Projects",
      "Project 6"
    ]
  },
  {
    "objectID": "460_Projects/project0.html",
    "href": "460_Projects/project0.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS460 Projects",
      "Project 0"
    ]
  },
  {
    "objectID": "460_Projects/project2.html",
    "href": "460_Projects/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS460 Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "460_Projects/project4.html",
    "href": "460_Projects/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS460 Projects",
      "Project 4"
    ]
  },
  {
    "objectID": "460_Projects/project6.html",
    "href": "460_Projects/project6.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS460 Projects",
      "Project 6"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "index.html#title-2-header",
    "href": "index.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "Templates/DS250_Template.html",
    "href": "Templates/DS250_Template.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Uncomment the entire section to use this template and rename this header with your project title\n\n\n\n\n\n\n\n\n Back to top"
  }
]